# =============================================================================
# CYBERIA (CAP) TOKEN - ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and configure for your target environment(s)
# Never commit .env to version control - it contains sensitive data!

# =============================================================================
# NETWORK RPC ENDPOINTS
# =============================================================================
# Get API keys from: Alchemy (https://www.alchemy.com/), Infura, or other providers

# Localhost (Hardhat Network)
# No configuration needed - uses http://127.0.0.1:8545 by default

# Sepolia Testnet
SEPOLIA_RPC_URL=https://eth-sepolia.g.alchemy.com/v2/YOUR_ALCHEMY_KEY
# Alternative: SEPOLIA_RPC_URL=https://sepolia.infura.io/v3/YOUR_INFURA_KEY

# Ethereum Mainnet (PRODUCTION - use with caution!)
MAINNET_RPC_URL=https://eth-mainnet.g.alchemy.com/v2/YOUR_ALCHEMY_KEY
# Alternative: MAINNET_RPC_URL=https://mainnet.infura.io/v3/YOUR_INFURA_KEY

# =============================================================================
# WALLET CONFIGURATION
# =============================================================================
# ⚠️  SECURITY WARNING: Never share your private key or commit it to git!
# Format: 0x followed by 64 hex characters (without 0x prefix from MetaMask)
# For localhost: Leave empty to use default Hardhat test accounts
# For testnets/mainnet: Use a dedicated deployment wallet

PRIVATE_KEY=

# =============================================================================
# CONTRACT VERIFICATION
# =============================================================================
# Get your API key from: https://etherscan.io/myapikey
ETHERSCAN_API_KEY=

# =============================================================================
# LOCALHOST DEPLOYMENT CONFIGURATION (Development/Testing)
# =============================================================================
# When deploying to localhost (npm run deploy:localhost), the script automatically
# uses Hardhat's default test accounts. No configuration needed!
#
# Default accounts (pre-funded with 10,000 ETH each):
#   Owner:         0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266 (Hardhat account #0)
#   Fee Recipient: 0x70997970C51812dc3A010C7d01b50e0d17dc79C8 (Hardhat account #1)
#
# Only set these if you need to override the defaults:
# LOCALHOST_OWNER_ADDRESS=
# LOCALHOST_FEE_RECIPIENT=

# =============================================================================
# SEPOLIA TESTNET DEPLOYMENT CONFIGURATION
# =============================================================================
# Configure these for Sepolia testnet deployment

# Owner address (DAO address or your test wallet)
SEPOLIA_OWNER_ADDRESS=

# Fee recipient (Treasury/Safe address or 0x0000...000 for burn)
SEPOLIA_FEE_RECIPIENT=

# =============================================================================
# MAINNET DEPLOYMENT CONFIGURATION (PRODUCTION)
# =============================================================================
# ⚠️  CRITICAL: Double-check these addresses before mainnet deployment!

# Owner address (MUST be your DAO governance contract address)
MAINNET_OWNER_ADDRESS=

# Fee recipient (MUST be your Treasury Safe address or 0x0000...000 for burn)
MAINNET_FEE_RECIPIENT=

# =============================================================================
# GLOBAL DEPLOYMENT FALLBACKS
# =============================================================================
# These are used as fallbacks if environment-specific values aren't set
# Useful for development, but use environment-specific vars for production

OWNER_ADDRESS=
FEE_RECIPIENT=

# =============================================================================
# POST-DEPLOYMENT CONFIGURATION
# =============================================================================
# Used by the configuration script to manage deployed contracts

# ✨ Deployed contract address (OPTIONAL - auto-detected from deployments.json!)
# The configuration script automatically detects the deployed address for each network.
# Leave this empty unless you need to override the auto-detection.
#
# How it works:
#   npm run configure:localhost → Uses address from deployments.json for localhost
#   npm run configure:sepolia   → Uses address from deployments.json for sepolia
#   npm run configure:mainnet   → Uses address from deployments.json for mainnet
#
# Only set this if:
#   - You want to configure a specific address that's not in deployments.json
#   - You're testing with a non-standard deployment
CAP_TOKEN_ADDRESS=

# AMM Pool addresses to register (e.g., Uniswap V2/V3 pair addresses)
# Set this when you want to add a pool via configuration script
POOL_ADDRESS=

# Update fee recipient after deployment (optional)
# Set this when you want to change the treasury address
NEW_FEE_RECIPIENT=

# =============================================================================
# ARAGON DAO CONFIGURATION
# =============================================================================
# Aragon OSx DAO addresses for governance
# Set these after creating your DAO via app.aragon.org

# Main DAO contract address
ARAGON_DAO_ADDRESS=

# CAP Token Governance plugin address
CAP_GOVERNANCE_PLUGIN_ADDRESS=

# =============================================================================
# TESTING CONFIGURATION (Optional)
# =============================================================================
# These control test behavior - usually don't need to change

# Enable gas reporting in tests
REPORT_GAS=false

# Coinmarketcap API for gas price conversions (optional)
COINMARKETCAP_API_KEY=