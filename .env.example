# =============================================================================
# CYBERIA (CAP) TOKEN - ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and configure for your target environment(s)
# Never commit .env to version control - it contains sensitive data!

# =============================================================================
# NETWORK RPC ENDPOINTS
# =============================================================================
# Get API keys from: Alchemy (https://www.alchemy.com/), Infura, or other providers

# Localhost (Hardhat Network)
# No configuration needed - uses http://127.0.0.1:8545 by default

# Sepolia Testnet
SEPOLIA_RPC_URL=https://eth-sepolia.g.alchemy.com/v2/YOUR_ALCHEMY_KEY
# Alternative: SEPOLIA_RPC_URL=https://sepolia.infura.io/v3/YOUR_INFURA_KEY

# Ethereum Mainnet (PRODUCTION - use with caution!)
MAINNET_RPC_URL=https://eth-mainnet.g.alchemy.com/v2/YOUR_ALCHEMY_KEY
# Alternative: MAINNET_RPC_URL=https://mainnet.infura.io/v3/YOUR_INFURA_KEY

# =============================================================================
# WALLET CONFIGURATION
# =============================================================================
# ⚠️  SECURITY WARNING: Never share your private key or commit it to git!
# Format: 0x followed by 64 hex characters (without 0x prefix from MetaMask)
# For localhost: Leave empty to use default Hardhat test accounts
# For testnets/mainnet: Use a dedicated deployment wallet

PRIVATE_KEY=

# =============================================================================
# CONTRACT VERIFICATION
# =============================================================================
# Get your API key from: https://etherscan.io/myapikey
ETHERSCAN_API_KEY=

# =============================================================================
# LOCALHOST DEPLOYMENT CONFIGURATION (Development/Testing)
# =============================================================================
# When deploying to localhost (npm run deploy:localhost), the script automatically
# uses Hardhat's default test accounts. No configuration needed!
#
# Default accounts (pre-funded with 10,000 ETH each):
#   Owner:         0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266 (Hardhat account #0)
#   Fee Recipient: 0x70997970C51812dc3A010C7d01b50e0d17dc79C8 (Hardhat account #1)
#
# Only set these if you need to override the defaults:
# LOCALHOST_OWNER_ADDRESS=
# LOCALHOST_FEE_RECIPIENT=

# =============================================================================
# TESTNET DEPLOYMENT CONFIGURATION
# =============================================================================
# For testing convenience, set TESTNET_OWNER_ADDRESS to use the same owner
# across all testnets (Sepolia, Arbitrum Sepolia, Optimism Sepolia, etc.)
# This reduces duplication when all testnets use the same wallet.
#
# Fallback order for testnet deployments:
# 1. Network-specific variable (e.g., SEPOLIA_OWNER_ADDRESS)
# 2. TESTNET_OWNER_ADDRESS (if network-specific not set)
# 3. Deployer address (if neither is set)

# Single owner address for ALL testnets (recommended for testing)
TESTNET_OWNER_ADDRESS=

# =============================================================================
# SEPOLIA TESTNET DEPLOYMENT CONFIGURATION
# =============================================================================
# Configure these for Sepolia testnet deployment
# Leave empty to use TESTNET_OWNER_ADDRESS fallback

# Owner address (DAO address or your test wallet)
SEPOLIA_OWNER_ADDRESS=

# Fee recipient (Treasury/Safe address or 0x0000...000 for burn)
SEPOLIA_FEE_RECIPIENT=

# =============================================================================
# MAINNET DEPLOYMENT CONFIGURATION (PRODUCTION)
# =============================================================================
# ⚠️  CRITICAL: Double-check these addresses before mainnet deployment!

# Owner address (MUST be your DAO governance contract address)
MAINNET_OWNER_ADDRESS=

# Fee recipient (MUST be your Treasury Safe address or 0x0000...000 for burn)
MAINNET_FEE_RECIPIENT=

# =============================================================================
# GLOBAL DEPLOYMENT FALLBACKS
# =============================================================================
# These are used as fallbacks if environment-specific values aren't set
# Useful for development, but use environment-specific vars for production

OWNER_ADDRESS=
FEE_RECIPIENT=

# =============================================================================
# POST-DEPLOYMENT CONFIGURATION
# =============================================================================
# Used by the configuration script to manage deployed contracts

# ✨ Deployed contract address (OPTIONAL - auto-detected from deployments.json!)
# The configuration script automatically detects the deployed address for each network.
# Leave this empty unless you need to override the auto-detection.
#
# How it works:
#   npm run configure:localhost → Uses address from deployments.json for localhost
#   npm run configure:sepolia   → Uses address from deployments.json for sepolia
#   npm run configure:mainnet   → Uses address from deployments.json for mainnet
#
# Only set this if:
#   - You want to configure a specific address that's not in deployments.json
#   - You're testing with a non-standard deployment
CAP_TOKEN_ADDRESS=

# AMM Pool addresses to register (e.g., Uniswap V2/V3 pair addresses)
# Set this when you want to add a pool via configuration script
POOL_ADDRESS=

# Update fee recipient after deployment (optional)
# Set this when you want to change the treasury address
NEW_FEE_RECIPIENT=

# =============================================================================
# ARAGON DAO CONFIGURATION
# =============================================================================
# Aragon OSx DAO addresses for governance
# Set these after creating your DAO via app.aragon.org

# Main DAO contract address
ARAGON_DAO_ADDRESS=

# CAP Token Governance plugin address
CAP_GOVERNANCE_PLUGIN_ADDRESS=

# =============================================================================
# LAYERZERO OFT INTEGRATION (Cross-chain Bridging)
# =============================================================================
# Configuration for deploying CAP token on multiple chains via LayerZero V2
# See DEPLOYMENT_ISSUES.md and DEPLOYMENT_FIXES_SUMMARY.md for deployment details

# OFT Adapter address on Ethereum (set after deployment)
OFT_ADAPTER_ADDRESS=
SEPOLIA_CAP_TOKEN_ADDRESS=0xA6B680A88c16056de7194CF775D04A45D0692C11
MAINNET_CAP_TOKEN_ADDRESS=

# --- ARBITRUM ---
ARBITRUM_RPC_URL=https://arb1.arbitrum.io/rpc
ARBITRUM_OFT_ADDRESS=
ARBITRUM_OWNER_ADDRESS=
ARBISCAN_API_KEY=

# Arbitrum Sepolia (testnet) - uses TESTNET_OWNER_ADDRESS fallback
ARBITRUM_SEPOLIA_RPC_URL=https://sepolia-rollup.arbitrum.io/rpc
ARBITRUM_SEPOLIA_OFT_ADDRESS=
ARBITRUM_SEPOLIA_OWNER_ADDRESS=

# --- OPTIMISM ---
OPTIMISM_RPC_URL=https://mainnet.optimism.io
OPTIMISM_OFT_ADDRESS=
OPTIMISM_OWNER_ADDRESS=
OPTIMISTIC_ETHERSCAN_API_KEY=

# Optimism Sepolia (testnet) - uses TESTNET_OWNER_ADDRESS fallback
OPTIMISM_SEPOLIA_RPC_URL=https://sepolia.optimism.io
OPTIMISM_SEPOLIA_OFT_ADDRESS=
OPTIMISM_SEPOLIA_OWNER_ADDRESS=

# --- BASE ---
BASE_RPC_URL=https://mainnet.base.org
BASE_OFT_ADDRESS=
BASE_OWNER_ADDRESS=
BASESCAN_API_KEY=

# Base Sepolia (testnet) - uses TESTNET_OWNER_ADDRESS fallback
BASE_SEPOLIA_RPC_URL=https://sepolia.base.org
BASE_SEPOLIA_OFT_ADDRESS=
BASE_SEPOLIA_OWNER_ADDRESS=

# --- POLYGON ---
POLYGON_RPC_URL=https://polygon-rpc.com
POLYGON_OFT_ADDRESS=
POLYGON_OWNER_ADDRESS=
POLYGONSCAN_API_KEY=

# Polygon Amoy (testnet) - uses TESTNET_OWNER_ADDRESS fallback
POLYGON_AMOY_RPC_URL=https://rpc-amoy.polygon.technology
POLYGON_AMOY_OFT_ADDRESS=
POLYGON_AMOY_OWNER_ADDRESS=

# =============================================================================
# TESTING CONFIGURATION (Optional)
# =============================================================================
# These control test behavior - usually don't need to change

# Enable gas reporting in tests
REPORT_GAS=false

# Coinmarketcap API for gas price conversions (optional)
COINMARKETCAP_API_KEY=