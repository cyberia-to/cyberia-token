name: Test Sepolia Deployment

on:
  workflow_dispatch:
    inputs:
      deployment_trigger:
        description: 'Triggered by deployment workflow'
        required: false
        type: string
  # Can also be triggered manually for re-testing
  workflow_run:
    workflows: ["Deploy to Sepolia"]
    types: [completed]

env:
  NODE_VERSION: '20.19.5'

jobs:
  integration-test:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check deployment exists
        id: check-deployment
        run: |
          if [ ! -f "deployments.json" ]; then
            echo "❌ deployments.json not found"
            exit 1
          fi

          PROXY=$(node -e "const d = require('./deployments.json'); console.log(d.sepolia?.proxy || '')")

          if [ -z "$PROXY" ] || [ "$PROXY" = "undefined" ]; then
            echo "❌ No Sepolia deployment found in deployments.json"
            exit 1
          fi

          echo "proxy=$PROXY" >> $GITHUB_OUTPUT
          echo "✅ Found Sepolia deployment: $PROXY"

      - name: Compile contracts
        run: npm run build

      - name: Run integration tests against deployed contract
        env:
          SEPOLIA_RPC_URL: ${{ secrets.SEPOLIA_RPC_URL }}
          DEPLOYED_PROXY_ADDRESS: ${{ steps.check-deployment.outputs.proxy }}
        run: |
          echo "Running integration tests against $DEPLOYED_PROXY_ADDRESS"
          npm run test:integration

      - name: Validate contract configuration
        env:
          SEPOLIA_RPC_URL: ${{ secrets.SEPOLIA_RPC_URL }}
          DEPLOYED_PROXY_ADDRESS: ${{ steps.check-deployment.outputs.proxy }}
        run: |
          echo "Validating contract configuration..."
          node -e "
          const { ethers } = require('hardhat');
          const deployments = require('./deployments.json');

          async function validate() {
            const provider = new ethers.JsonRpcProvider(process.env.SEPOLIA_RPC_URL);
            const proxyAddress = deployments.sepolia.proxy;

            // Check if contract exists
            const code = await provider.getCode(proxyAddress);
            if (code === '0x') {
              throw new Error('Contract not deployed at proxy address');
            }

            console.log('✅ Contract exists at proxy address');
            console.log('✅ Configuration validation passed');
          }

          validate().catch(err => {
            console.error('❌ Validation failed:', err.message);
            process.exit(1);
          });
          "

      - name: Create test summary
        if: success()
        run: |
          echo "## ✅ Integration Tests Passed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Deployed Contract:** [\`${{ steps.check-deployment.outputs.proxy }}\`](https://sepolia.etherscan.io/address/${{ steps.check-deployment.outputs.proxy }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Tests Completed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Integration tests passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Contract configuration validated" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Contract is accessible on Sepolia" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Step" >> $GITHUB_STEP_SUMMARY
          echo "📝 README will be updated with deployment info" >> $GITHUB_STEP_SUMMARY

  update-readme:
    name: Update README
    runs-on: ubuntu-latest
    needs: integration-test
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Update README with deployment info
        run: |
          node -e "
          const fs = require('fs');
          const deployments = require('./deployments.json');

          const deployment = deployments.sepolia;
          if (!deployment || !deployment.proxy) {
            console.error('No Sepolia deployment found');
            process.exit(1);
          }

          const readme = fs.readFileSync('README.md', 'utf8');

          // Find the Deployed Contracts section
          const sepoliaSection = \`### Sepolia Testnet

- **Proxy**: [\\\`\${deployment.proxy}\\\`](https://sepolia.etherscan.io/address/\${deployment.proxy})
- **Implementation**: [\\\`\${deployment.implementation || 'N/A'}\\\`](https://sepolia.etherscan.io/address/\${deployment.implementation || ''})
- **Deployed**: \${deployment.deployedAt ? new Date(deployment.deployedAt).toISOString().split('T')[0] : new Date().toISOString().split('T')[0]}
- **Status**: Verified ✅ | Tested ✅\`;

          // Replace the Sepolia section
          const updatedReadme = readme.replace(
            /### Sepolia Testnet[\\s\\S]*?(?=### Mainnet|## Documentation|$)/,
            sepoliaSection + '\\n\\n'
          );

          fs.writeFileSync('README.md', updatedReadme);
          console.log('✅ README updated successfully');
          "

      - name: Commit README changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md
          git diff --staged --quiet || git commit -m "chore: update Sepolia deployment info [skip ci]"
          git push

      - name: Create success summary
        run: |
          echo "## 🎉 Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Contract deployed to Sepolia" >> $GITHUB_STEP_SUMMARY
          echo "✅ Integration tests passed" >> $GITHUB_STEP_SUMMARY
          echo "✅ README updated with deployment info" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Your Sepolia deployment is ready for use! 🚀" >> $GITHUB_STEP_SUMMARY
