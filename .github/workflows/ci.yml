name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.5'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier
        run: npm run format:check

      - name: Run ESLint
        run: npm run lint

      - name: Run Solhint
        run: npm run lint:sol

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.5'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Compile contracts
        run: npm run build

      - name: Check contract sizes
        run: npm run size

      - name: Run unit tests
        run: npm run test:unit

      - name: Run security tests
        run: npm run test:security

      - name: Run integration tests
        run: npm run test:integration

  foundry:
    name: Foundry Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.5'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Compile contracts with Hardhat (for Foundry)
        run: npm run build

      - name: Run all Foundry tests
        run: forge test -vv

      - name: Generate Foundry gas report (unit + advanced tests only)
        run: forge test --match-path "test/foundry/CAPToken.{unit,advanced}.t.sol" --gas-report

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.5'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: cyberia-token-coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        continue-on-error: true

  slither:
    name: Slither Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Slither
        uses: crytic/slither-action@v0.4.0
        id: slither
        with:
          node-version: '20.19.5'
          solc-version: '0.8.24'
          slither-version: 'latest'
          fail-on: none
          slither-args: '--filter-paths "node_modules|test" --exclude naming-convention,solc-version,timestamp'
        continue-on-error: true

      - name: Create SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: ${{ steps.slither.outputs.sarif }}
        continue-on-error: true

  gas-report:
    name: Gas Report
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.5'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate PR gas report
        run: npm run test:gas

      - name: Save PR gas report
        run: cp gas-report.txt gas-report-pr.txt

      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}

      - name: Install dependencies (base)
        run: npm ci

      - name: Generate base gas report
        run: npm run test:gas
        continue-on-error: true

      - name: Save base gas report
        run: cp gas-report.txt gas-report-base.txt
        continue-on-error: true

      - name: Comment gas report on PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            // Read PR gas report
            const gasReportPR = fs.readFileSync('gas-report-pr.txt', 'utf8');

            // Try to read base gas report
            let gasReportBase = null;
            let comparisonSection = '';

            try {
              gasReportBase = fs.readFileSync('gas-report-base.txt', 'utf8');

              // Extract key metrics for comparison
              const extractMetrics = (report) => {
                const deployMatch = report.match(/CAPToken\s+·\s+\-\s+·\s+\-\s+·\s+(\d+)/);
                const transferMatch = report.match(/transfer\s+·\s+[\d,]+\s+·\s+[\d,]+\s+·\s+([\d,]+)/);
                return {
                  deployment: deployMatch ? parseInt(deployMatch[1].replace(/,/g, '')) : null,
                  transfer: transferMatch ? parseInt(transferMatch[1].replace(/,/g, '')) : null
                };
              };

              const basMetrics = extractMetrics(gasReportBase);
              const prMetrics = extractMetrics(gasReportPR);

              if (basMetrics.deployment && prMetrics.deployment) {
                const deployDiff = prMetrics.deployment - basMetrics.deployment;
                const deployPct = ((deployDiff / basMetrics.deployment) * 100).toFixed(2);
                const deploySign = deployDiff > 0 ? '+' : '';
                const deployEmoji = deployDiff > 0 ? '📈' : deployDiff < 0 ? '📉' : '➡️';

                const transferDiff = prMetrics.transfer - basMetrics.transfer;
                const transferPct = ((transferDiff / basMetrics.transfer) * 100).toFixed(2);
                const transferSign = transferDiff > 0 ? '+' : '';
                const transferEmoji = transferDiff > 0 ? '📈' : transferDiff < 0 ? '📉' : '➡️';

                comparisonSection = `\n## 📊 Gas Comparison vs Base Branch\n\n` +
                  `| Metric | Base | PR | Diff | % Change |\n` +
                  `|--------|------|----|----|----------|\n` +
                  `| ${deployEmoji} Deployment | ${basMetrics.deployment.toLocaleString()} | ${prMetrics.deployment.toLocaleString()} | ${deploySign}${deployDiff.toLocaleString()} | ${deploySign}${deployPct}% |\n` +
                  `| ${transferEmoji} Transfer (avg) | ${basMetrics.transfer.toLocaleString()} | ${prMetrics.transfer.toLocaleString()} | ${transferSign}${transferDiff.toLocaleString()} | ${transferSign}${transferPct}% |\n\n`;
              }
            } catch (error) {
              comparisonSection = '\n_Note: Base branch comparison unavailable (first PR or base build failed)_\n\n';
            }

            const body = `## ⛽ Gas Report\n\n${comparisonSection}\n<details>\n<summary>📋 Full Gas Report</summary>\n\n\`\`\`\n${gasReportPR}\n\`\`\`\n</details>`;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
        continue-on-error: true

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test, foundry]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.5'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build contracts
        run: npm run build

      - name: Check TypeChain types
        run: |
          if [ ! -d "typechain-types" ]; then
            echo "TypeChain types not generated!"
            exit 1
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            artifacts/
            typechain-types/
          retention-days: 7
