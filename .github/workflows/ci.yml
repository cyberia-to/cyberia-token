name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.5'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier
        run: npm run format:check

      - name: Run ESLint
        run: npm run lint

      - name: Run Solhint
        run: npm run lint:sol

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.5'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Compile contracts
        run: npm run build

      - name: Check contract sizes
        run: npm run size

      - name: Run unit tests
        run: npm run test:unit

      - name: Run security tests
        run: npm run test:security

      - name: Run integration tests
        run: npm run test:integration

  foundry:
    name: Foundry Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.5'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Foundry tests
        run: npm run test:foundry

      - name: Run Foundry fuzz tests
        run: npm run test:foundry:fuzz

      - name: Run Foundry invariant tests
        run: npm run test:foundry:invariant

      - name: Run Foundry stateful tests
        run: npm run test:foundry:stateful

      - name: Generate Foundry gas report
        run: npm run test:foundry:gas

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.5'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: cyberia-token-coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        continue-on-error: true

  slither:
    name: Slither Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Slither
        uses: crytic/slither-action@v0.4.0
        id: slither
        with:
          node-version: '20.19.5'
          solc-version: '0.8.24'
          slither-version: 'latest'
          fail-on: none
          slither-args: '--filter-paths "node_modules|test" --exclude naming-convention,solc-version'
        continue-on-error: true

      - name: Create SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: ${{ steps.slither.outputs.sarif }}
        continue-on-error: true

  gas-report:
    name: Gas Report
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.5'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate gas report
        run: npm run test:gas

      - name: Comment gas report on PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const gasReport = fs.readFileSync('gas-report.txt', 'utf8');

            const body = `## â›½ Gas Report\n\n\`\`\`\n${gasReport}\n\`\`\``;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
        continue-on-error: true

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test, foundry]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.5'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build contracts
        run: npm run build

      - name: Check TypeChain types
        run: |
          if [ ! -d "typechain-types" ]; then
            echo "TypeChain types not generated!"
            exit 1
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            artifacts/
            typechain-types/
          retention-days: 7
